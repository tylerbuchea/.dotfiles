# function d() {
#   cd "$1" && l
# }

#function aliases () {
#  if [ "$1" = "" ]
#  then
#    cat ~/.extra
#  elif [ "$1" = "-e" ]
#  then
#    subl -e ~/.extra
#  elif [ “$1” = “-edit” ]
#  then
#  	subl ~/.extra
#  else
#    sed -n "/<$1>/","/<\/$1>/p" ~/.extra
#  fi
#}

# Make new directory
# function md() {
#   mkdir "$1" && d "$1"
# }

# VS Code

function ca() {
	code --add $1
	cd $1
}

# Docker SSH

function dssh() {
	docker exec -it $1 /bin/bash
}

function docker_clean() {
	docker volume rm $(docker volume ls -qf dangling=true)
}

function portainer() {
	docker volume create portainer_data
	docker run -d -p 9000:9000 -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer
}

# SSH

# $1 == USER@HOST
function installssh() {
	cat ~/.ssh/id_rsa.pub | ssh $1 "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"
}

# Make directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$@"
}

# Video 2 Gif
function mov2gif() {
  local width=${2:-320}
  ffmpeg -i "$1" -vf scale=${width}:-1 -r 10 -f image2pipe -vcodec ppm - |\
  convert -delay 5 -layers Optimize -loop 0 - "${1%.*}.gif"
}

# List PATH variables
function path () {
  if [ "$1" = "-e" ]
  then
    echo "Figure this out TYLER!"
  else
    echo $PATH | tr ":" "\n"
  fi
}

# Clean React Native Project
function rnreset() {
	watchman watch-del-all
	rm -rf node_modules && yarn install
	npm start -- --reset-cache
}

# Start an HTTP server from a directory, optionally specifying the port
function serverold() {
	local port="${1:-8000}"
	sleep 1 && open "http://localhost:${port}/" &
	# Set the default Content-Type to `text/plain` instead of `application/octet-stream`
	# And serve everything as UTF-8 (although not technically correct, this doesn’t break anything for binary files)
	python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# This one is for the Python v3
function server() {
	local port="${1:-8000}"
	python -m http.server $port
}

# Start a PHP server from a directory, optionally specifying the port
# (Requires PHP 5.4.0+.)
function phpserver() {
	local port="${1:-4000}"
	local ip=$(ipconfig getifaddr en1)
	sleep 1 && open "http://${ip}:${port}/" &
	php -S "${ip}:${port}"
}
