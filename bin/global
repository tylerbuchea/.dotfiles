#!/usr/bin/env node
const fs = require('fs').promises;

main();

async function main() {
  const [fsReaddirError, filenames] = await to(fs.readdir(__dirname));
  if (fsReaddirError) return console.error(fsReaddirError);

  const scriptIgnore = ['.DS_Store', 'global'];
  const scriptnames = filenames.filter(name => !scriptIgnore.includes(name));

  const [nodeBinary, script, subscript, ...rest] = process.argv;

  if (!subscript) {
    return console.error('Must define a subscript ie: global do-thing');
  }

  const helpCommands = ['help', 'h', '-h', '--help'];
  if (helpCommands.includes(subscript)) {
    return console.log(JSON.stringify(scriptnames, null, 2));
  }

  if (!scriptnames.includes(subscript)) {
    return console.error('Global not found', subscript);
  }

  const subscriptPath = `./${subscript}/index.js`;
  require(subscriptPath);
}

// https://github.com/scopsy/await-to-js
function to(promise, errorExt) {
  return promise
    .then(data => [null, data])
    .catch(error => [Object.assign(error, errorExt), undefined]);
}
